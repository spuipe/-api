Vue.prototype.$http = axios
const CancelToken = axios.CancelToken
// Vue.prototype.$httpRequestList = new Map()
Vue.prototype.$httpRequestList = new Map<String | Number,Object | Array<any>>()

Vue.prototype.$ajax = function(type: Method = 'get', url: string, data: object | string) {
    let _this = this
    return new Promise((resolve, reject) => {
        let targetName = _this.$route.name
        Vue.prototype.$httpRequestList.set(targetName, [])
        let formData: AxiosRequestConfig = {
          method: type,
          url,
          cancelToken: new CancelToken(c => {
              !!targetName && Vue.prototype.$httpRequestList.get(targetName).push(c)
          })
        }

        let json = ( type === 'get' ) ? Object.assign(formData, { params: data }) : Object.assign(formData, { data: data })
        let ajax = Vue.prototype.$http(json).then((res: any) => {
            resolve(res)
        }).catch((error: any) => {
            if(error.message === 'interrupt'){
                //  console.log('已中断请求',error)
                 return
            }else {
                !!targetName && (Vue.prototype.$httpRequestList.delete(targetName))
                reject(error)
            }
        })

        return ajax
    })
}

router.beforeEach((to, from, next) => {
    let { name: fromName } = from
    if(from.meta.interrupt === true && (!!fromName && Vue.prototype.$httpRequestList.get(fromName).length > 0 )){
        Vue.prototype.$httpRequestList.get(fromName).forEach((item: any) => {
            item('interrupt')  //  给个标志，中断请求
        })
    }
    !!fromName && (Vue.prototype.$httpRequestList.delete(fromName))
    next()
})
